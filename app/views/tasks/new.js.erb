
// モーダル内のフォームを取得
var form = document.getElementsByTagName('form')[0]
// フォームのレンダリング
form.outerHTML = '<%= j(render 'form', task: Task.new, value: '投稿') %>'

// Railsのform_withではname属性を付けられないので、ここで追加している
form.setAttribute("name", "myForm")

// ステータスボタンの押下動作 =======================================================
var stateButton = document.getElementById('state_btn')
var state = document.getElementById('task_state')

stateButton.addEventListener('click', function() {
  switch (state.value){
    case 'TODO':
      stateButton.innerHTML = 'DOING'
      state.value = 'DOING'
      break
    case 'DOING':
      stateButton.innerHTML = 'DONE'
      state.value = 'DONE'
      break
    case 'DONE':
      stateButton.innerHTML = 'TODO'
      state.value = 'TODO'
      break
  }
  console.log('[CREATE TASK] State Change [' + state.value + ']')
})
// ==============================================================================

// クライアント側でのバリデーション処理
var submitButton = document.getElementById('submitButton');

submitButton.addEventListener('click', function () {
  var task_content = document.getElementById('task_content');
  var errorField = document.getElementById('errorField');
  // contentのチェック
  if (task_content.value.length == 0 || task_content.value.length >= 51) {
    console.log('[CONTENT INVALID]');
    errorField.innerHTML = 'タスクは1文字以上、50文字以内で入力してください';
    task_content.style.border = 'solid 2px red';
  } else {
    // console.log('[POST CREATE TASK]');
    this.form.submit();
    // document.myForm.submit();
  }
})
